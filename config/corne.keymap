/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "balanced";
    tapping-term-ms = <175>;
};

/ {
    combos {
        compatible = "zmk,combos";

        Return {
            bindings = <&kp RETURN>;
            key-positions = <22 21 20>;
        };

        escape {
            bindings = <&kp ESCAPE>;
            key-positions = <22 21 20 19>;
        };

        del_word {
            bindings = <&kp LA(BACKSPACE)>;
            key-positions = <37 40>;
        };

        backpage {
            bindings = <&kp LG(LEFT_BRACKET)>;
            key-positions = <13 14 15>;
        };

        forwardPage {
            bindings = <&kp LG(RIGHT_BRACKET)>;
            key-positions = <13 14 12>;
        };

        capsLock {
            bindings = <&kp CAPSLOCK>;
            key-positions = <26 33 27 32>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <19 20 21>;
        };

        backTab {
            bindings = <&kp LS(TAB)>;
            key-positions = <18 19 20>;
        };

        HomeRowApp {
            bindings = <&kp LC(LA(LS(LG(F))))>;
            key-positions = <20 15 14 21>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none      &kp Q               &kp W             &kp E           &kp R               &kp T                           &kp Y                          &kp U                &kp I                &kp O                   &kp P                    &kp MINUS
&none      &kp A               &kp S             &kp D           &kp F               &kp G                           &kp H                          &kp J                &kp K                &kp L                   &kp SEMI                 &kp SQT
&kp LSHFT  &mt LEFT_CONTROL Z  &mt LEFT_SHIFT X  &mt LEFT_ALT C  &mt LEFT_COMMAND V  &mt LA(LC(LG(LEFT_SHIFT))) B    &mt RA(RC(RG(RIGHT_SHIFT))) N  &mt RIGHT_COMMAND M  &mt RIGHT_ALT COMMA  &mt RIGHT_SHIFT PERIOD  &mt RIGHT_CONTROL SLASH  &kp ESC
                                                 &lt 3 DEL       &lt 1 BACKSPACE     &lt 2 TAB                       &mt RETURN LSHFT               &lt 4 SPACE          &lt 5 ESCAPE
            >;
        };

        NAV {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp LS(LC(LA(LG(B))))         &kp LA(LC(LG(RS(TILDE))))     &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &none             &kp LG(X)                 &kp LS(TAB)    &kp PAGE_DOWN  &kp PAGE_UP  &kp TAB    &kp ESCAPE  &none
&kp LG(LC(LA(LS(NUMBER_4))))  &kp LS(LA(LC(LG(NUMBER_2))))  &kp LS(LG(Z))         &kp LG(Z)              &kp LG(C)         &kp LG(V)                 &kp LEFT       &kp DOWN       &kp UP       &kp RIGHT  &kp RET     &trans
&kp LA(LC(LEFT_SHIFT))        &kp LEFT_CONTROL              &kp LEFT_SHIFT        &kp LEFT_ALT           &kp LEFT_COMMAND  &kp LA(LG(LC(LSHIFT)))    &trans         &trans         &trans       &trans     &trans      &trans
                                                                                  &none                  &trans            &none                     &kp BACKSPACE  &kp SPACE      &none
            >;
        };

        NUM {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB                 &none             &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC          &none          &kp N7                &kp N8  &kp N9  &kp PLUS   &none
&none                   &trans            &kp K_PREV      &kp C_PLAY         &kp C_NEXT       &kp C_BRIGHTNESS_DEC          &kp DOT        &kp N4                &kp N5  &kp N6  &kp EQUAL  &kp ASTERISK
&kp LA(LC(LEFT_SHIFT))  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &kp LEFT_ALT       &kp LEFT_GUI     &kp LA(LC(LG(LEFT_SHIFT)))    &kp COMMA      &kp N1                &kp N2  &kp N3  &kp MINUS  &kp FSLH
                                                          &none              &trans           &none                         &kp BACKSPACE  &mt LEFT_SHIFT SPACE  &kp N0
            >;
        };

        WIN {
            bindings = <
&none   &none   &kp LA(LC(MINUS))  &kp LA(LC(EQUAL))              &none                              &none                                             &none  &kp F7      &kp F8     &kp F9  &kp F10  &none
&none   &none   &kp LG(M)          &kp LC(LA(LS(B)))              &kp LC(LG(F))                      &kp LS(LC(LA(G)))                                 &none  &kp N4      &kp N5     &kp N6  &kp F11  &kp ESC
&trans  &trans  &trans             &mt LEFT_ALT LA(LS(LC(LEFT)))  &mt LEFT_COMMAND LS(LA(LC(SEMI)))  &mt LS(LA(LC(LEFT_COMMAND))) LC(LA(LS(RIGHT)))    &none  &kp N1      &kp N2     &kp N3  &kp F10  &none
                                   &none                          &none                              &none                                             &none  &kp K_REDO  &kp LG(Z)
            >;
        };

        SYM {
            bindings = <
&none   &none   &none   &none          &none      &none         &kp POUND  &kp PERCENT            &kp EXCLAMATION  &kp TILDE          &kp PIPE    &none
&none   &none   &none   &none          &none      &none         &kp GRAVE  &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp DOLLAR  &kp AMPERSAND
&trans  &trans  &trans  &trans         &trans     &trans        &kp CARET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &kp AT      &none
                        &kp BACKSPACE  &kp SPACE  &kp RETURN    &none      &none                  &none
            >;
        };

        SYSTEM {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &none    &none  &none  &none  &none  &sys_reset  &bootloader
&none       &none         &none         &none         &none         &none    &none  &none  &none  &none  &none       &none
&none       &none         &none         &none         &none         &none    &none  &none  &none  &none  &none       &none
                                        &none         &none         &none    &none  &none  &none
            >;
        };
    };
};
